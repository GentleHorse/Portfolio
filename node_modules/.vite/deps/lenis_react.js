import {
  Lenis
} from "./chunk-WC55XRJG.js";
import {
  require_jsx_runtime
} from "./chunk-XE53ZM2I.js";
import {
  require_react
} from "./chunk-ZLZLTJQL.js";
import {
  __toESM
} from "./chunk-2LSFTFF7.js";

// node_modules/lenis/dist/lenis-react.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);

// node_modules/@darkroom.engineering/tempus/dist/tempus.modern.mjs
var a = "undefined" != typeof window && new class {
  constructor() {
    this.raf = (a3) => {
      requestAnimationFrame(this.raf);
      const t = a3 - this.now;
      this.now = a3;
      for (let s2 = 0; s2 < this.callbacks.length; s2++)
        this.callbacks[s2].callback(a3, t);
    }, this.callbacks = [], this.now = performance.now(), requestAnimationFrame(this.raf);
  }
  add(a3, t = 0) {
    return this.callbacks.push({ callback: a3, priority: t }), this.callbacks.sort((a4, t2) => a4.priority - t2.priority), () => this.remove(a3);
  }
  remove(a3) {
    this.callbacks = this.callbacks.filter(({ callback: t }) => a3 !== t);
  }
}();

// node_modules/lenis/dist/lenis-react.mjs
var import_react = __toESM(require_react(), 1);
var f = (0, import_react.createContext)(null);
var d = new class Store {
  constructor(r2) {
    this.state = r2, this.listeners = [];
  }
  set(r2) {
    this.state = r2;
    for (let r3 of this.listeners)
      r3(this.state);
  }
  subscribe(r2) {
    return this.listeners = [...this.listeners, r2], () => {
      this.listeners = this.listeners.filter((e) => e !== r2);
    };
  }
  get() {
    return this.state;
  }
}(null);
var p = {};
function useLenis(r2, e = [], t = 0) {
  var i2;
  const l2 = (0, import_react.useContext)(f), o2 = function useStore(r3) {
    const [e2, t2] = (0, import_react.useState)(r3.get());
    return (0, import_react.useEffect)(() => r3.subscribe((r4) => t2(r4)), [r3]), e2;
  }(d), c2 = null !== (i2 = null != l2 ? l2 : o2) && void 0 !== i2 ? i2 : p, { lenis: a3, addCallback: b2, removeCallback: h } = c2;
  return (0, import_react.useEffect)(() => {
    if (r2 && b2 && h && a3)
      return b2(r2, t), r2(a3), () => {
        h(r2);
      };
  }, [a3, b2, h, t, ...e]), a3;
}
var b = (0, import_react.forwardRef)(({ children: i2, root: l2 = false, options: u2 = {}, autoRaf: p2 = true, rafPriority: b2 = 0, className: h, props: m }, v) => {
  const k = (0, import_react.useRef)(null), g = (0, import_react.useRef)(null), [y, C] = (0, import_react.useState)(void 0);
  (0, import_react.useImperativeHandle)(v, () => ({ wrapper: k.current, content: g.current, lenis: y }), [y]), (0, import_react.useEffect)(() => {
    const r2 = new Lenis(Object.assign(Object.assign({}, u2), !l2 && { wrapper: k.current, content: g.current }));
    return C(r2), () => {
      r2.destroy(), C(void 0);
    };
  }, [l2, JSON.stringify(u2)]), (0, import_react.useEffect)(() => {
    if (y && p2)
      return a.add((r2) => y.raf(r2), b2);
  }, [y, p2, b2]);
  const j = (0, import_react.useRef)([]), w = (0, import_react.useCallback)((r2, e) => {
    j.current.push({ callback: r2, priority: e }), j.current.sort((r3, e2) => r3.priority - e2.priority);
  }, []), O = (0, import_react.useCallback)((r2) => {
    j.current = j.current.filter((e) => e.callback !== r2);
  }, []);
  return (0, import_react.useEffect)(() => {
    if (l2 && y)
      return d.set({ lenis: y, addCallback: w, removeCallback: O }), () => d.set(null);
  }, [l2, y, w, O]), (0, import_react.useEffect)(() => {
    if (!y)
      return;
    const onScroll = (r2) => {
      for (let e = 0; e < j.current.length; e++)
        j.current[e].callback(r2);
    };
    return y.on("scroll", onScroll), () => {
      y.off("scroll", onScroll);
    };
  }, [y]), (0, import_jsx_runtime.jsx)(f.Provider, { value: { lenis: y, addCallback: w, removeCallback: O }, children: l2 ? i2 : (0, import_jsx_runtime.jsx)("div", Object.assign({ ref: k, className: h }, m, { children: (0, import_jsx_runtime.jsx)("div", { ref: g, children: i2 }) })) });
});
export {
  b as Lenis,
  f as LenisContext,
  b as ReactLenis,
  b as default,
  useLenis
};
//# sourceMappingURL=lenis_react.js.map
